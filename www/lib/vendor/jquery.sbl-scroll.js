// Generated by CoffeeScript 1.3.3
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

(function($) {
  var SublimeScroll, _sublime_scroll_object;
  SublimeScroll = (function() {

    SublimeScroll.prototype.el = {
      wrapper: null,
      iframe: null,
      scroll_bar: null,
      overlay: null
    };

    SublimeScroll.prototype.drag_active = false;

    SublimeScroll.prototype.scale_factor = null;

    SublimeScroll.prototype.wrapper_height = null;

    SublimeScroll.prototype.scroll_height = null;

    SublimeScroll.prototype.viewport_height = null;

    SublimeScroll.prototype.content_width = null;

    SublimeScroll.prototype.content_height = null;

    SublimeScroll.prototype.settings = null;

    SublimeScroll.prototype.update = function(options) {
      return this.settings = $.extend(this.settings, options);
    };

    SublimeScroll.prototype._get_setting = function(setting) {
      if (typeof this.settings[setting] === "function") {
        return this.settings[setting]();
      } else {
        return this.settings[setting];
      }
    };

    SublimeScroll.prototype.get_scroll_width = function() {
      return this._get_setting('scroll_width');
    };

    SublimeScroll.prototype.get_scroll_height = function() {
      return this._get_setting('scroll_height');
    };

    SublimeScroll.prototype.get_content_width = function() {
      return this._get_setting('content_width');
    };

    SublimeScroll.prototype.get_content_height = function() {
      return this._get_setting('content_height');
    };

    function SublimeScroll(options) {
      this.onDrag = __bind(this.onDrag, this);

      this.onDragEnd = __bind(this.onDragEnd, this);

      this.onScroll = __bind(this.onScroll, this);

      this.onResize = __bind(this.onResize, this);

      this.onIframeLoad = __bind(this.onIframeLoad, this);

      var _this = this;
      if (!(top.document === document)) {
        return this;
      }
      this.settings = {
        top: 0,
        bottom: 0,
        zIndex: 9999,
        opacity: 0.9,
        color: 'rgba(255, 255, 255, 0.1)',
        transparent_background: true,
        fixed_elements: '',
        scroll_width: 150
      };
      this.settings.scroll_height = function() {
        return $(window).height() - _this.settings.top - _this.settings.bottom;
      };
      this.settings.content_width = function() {
        return $('body').width();
      };
      this.settings.content_height = function() {
        return $('body').outerHeight(true);
      };
      this.update(options);
      $(window).bind('resize.sublimeScroll', this.onResize).bind('scroll.sublimeScroll', this.onScroll);
      this.render();
      this.el.overlay.on('mousedown.sublimeScroll', function(event) {
        event.preventDefault();
        _this.el.overlay.css({
          width: '100%'
        });
        $(window).on('mousemove.sublimeScroll', _this.onDrag).one('mouseup.sublimeScroll', _this.onDragEnd);
        return _this.onDrag(event);
      });
      return this;
    }

    SublimeScroll.prototype.render = function() {
      var $html;
      this.el.wrapper = $('<div>', {
        id: "sublime-scroll"
      }).css({
        position: 'fixed',
        zIndex: this.settings.zIndex,
        width: this.get_scroll_width(),
        height: this.get_scroll_height(),
        top: this.settings.top,
        right: 0,
        overflow: 'hidden',
        opacity: 0
      }).appendTo($('body'));
      this.el.iframe = $('<iframe>', {
        id: 'sublime-scroll-iframe',
        frameBorder: '0',
        scrolling: 'no',
        allowTransparency: true
      }).css({
        position: 'absolute',
        border: 0,
        margin: 0,
        padding: 0,
        overflow: 'hidden',
        top: 0,
        left: 0,
        zIndex: this.settings.zIndex + 1
      }).appendTo(this.el.wrapper);
      this.iframe_document = this.el.iframe[0].contentDocument || this.el.iframe.contentWindow.document;
      this.el.scroll_bar = $('<div>', {
        id: 'sublime-scroll-bar'
      }).css({
        position: 'absolute',
        right: 0,
        width: '100%',
        backgroundColor: this.settings.color,
        opacity: this.settings.opacity,
        zIndex: 99999
      });
      $html = $('html').clone();
      $html.find('body').addClass('sublime-scroll-window');
      $html.find('#sublime-scroll').remove();
      this.el.scroll_bar.appendTo($html.find('body'));
      if (this.settings.transparent_background) {
        $html.find('body').css({
          backgroundColor: 'transparent'
        });
      }
      $html.find(this.settings.fixed_elements).remove().css({
        position: 'absolute'
      }).appendTo(this.el.scroll_bar);
      this.el.iframe.on('load', this.onIframeLoad);
      this.iframe_document.write($html.html());
      this.iframe_document.close();
      return this.el.overlay = $('<div>', {
        id: 'sublime-scroll-overlay'
      }).css({
        position: 'fixed',
        top: this.settings.top,
        right: 0,
        width: this.get_scroll_width(),
        height: '100%',
        zIndex: this.settings.zIndex + 3
      }).appendTo(this.el.wrapper);
    };

    SublimeScroll.prototype.onIframeLoad = function(event) {
      this.el.scroll_bar = $('#sublime-scroll-bar', this.iframe_document);
      $(window).resize().scroll();
      return this.el.wrapper.animate({
        opacity: 1
      }, 100);
    };

    SublimeScroll.prototype.onResize = function(event) {
      var content_height, content_width;
      content_width = this.get_content_width();
      content_height = this.get_content_height();
      this.scale_factor = this.get_scroll_width() / content_width;
      this.content_width_scaled = content_width * this.scale_factor;
      this.content_height_scaled = content_height * this.scale_factor;
      this.el.iframe.css({
        width: content_width,
        height: content_height,
        transform: 'scale(' + this.scale_factor + ')',
        marginLeft: -(content_width / 2 - this.content_width_scaled / 2),
        marginTop: -(content_height / 2 - this.content_height_scaled / 2)
      });
      this.wrapper_height = this.get_scroll_height();
      this.el.wrapper.css({
        height: this.wrapper_height
      });
      this.viewport_height = $(window).height();
      this.viewport_height_scaled = this.viewport_height * this.scale_factor;
      this.el.scroll_bar.css({
        height: this.viewport_height
      });
      return $(window).scroll();
    };

    SublimeScroll.prototype.onScroll = function(event) {
      var factor, margin, max_margin, viewport_factor, y;
      if (!this.drag_active) {
        this.el.scroll_bar.css({
          top: $(window).scrollTop()
        });
      }
      if (this.content_height_scaled > this.wrapper_height) {
        y = this.el.scroll_bar.position().top * this.scale_factor;
        max_margin = this.content_height_scaled - this.wrapper_height;
        factor = y / this.content_height_scaled;
        viewport_factor = this.viewport_height_scaled / this.content_height_scaled;
        margin = -(factor * max_margin + viewport_factor * y);
      } else {
        margin = 0;
      }
      this.el.iframe.css({
        top: margin
      });
      return this;
    };

    SublimeScroll.prototype.onDragEnd = function(event) {
      event.preventDefault();
      this.el.overlay.css({
        width: this.get_scroll_width()
      });
      $(window).off('mousemove.sublimeScroll', this.onDrag);
      return this.drag_active = false;
    };

    SublimeScroll.prototype.onDrag = function(event) {
      var max_pos, offsetY, y, _scale_factor;
      this.drag_active = true;
      if (!(event.target === this.el.overlay[0])) {
        return false;
      }
      offsetY = event.offsetY || event.originalEvent.layerY;
      if (this.content_height_scaled > this.wrapper_height) {
        _scale_factor = this.wrapper_height / this.get_content_height();
      } else {
        _scale_factor = this.scale_factor;
      }
      y = offsetY / _scale_factor - this.viewport_height / 2;
      max_pos = this.get_content_height() - this.viewport_height;
      if (y < 0) {
        y = 0;
      }
      if (y > max_pos) {
        y = max_pos;
      }
      this.el.scroll_bar.css({
        top: y
      });
      return $(window).scrollTop(y);
    };

    SublimeScroll.prototype.destroy = function() {
      var _sublime_scroll_object;
      $(window).off('resize.sublimeScroll', this.onResize).off('scroll.sublimeScroll', this.onScroll);
      _sublime_scroll_object = null;
      return this;
    };

    return SublimeScroll;

  })();
  _sublime_scroll_object = null;
  return $.sublimeScroll = function(options) {
    if (_sublime_scroll_object && options) {
      return _sublime_scroll_object.update(options);
    } else if (_sublime_scroll_object) {
      return _sublime_scroll_object;
    } else {
      _sublime_scroll_object = new SublimeScroll(options);
      return _sublime_scroll_object;
    }
  };
})(jQuery);
